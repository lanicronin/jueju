# Copyright 2024 Robert Cronin
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: "3.0.0"
info:
  version: 1.0.0
  title: JueJu API
  description: This is the JueJu API
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080/api/v1
    description: Local server
  - url: /api/v1
    description: Production server

components:
  schemas:
    User:
      required:
        - id
        - auth0_id
        - email
      properties:
        id:
          type: string
          format: uuid
          description: User ID
        auth0_id:
          type: string
          description: Auth0 ID
        email:
          type: string
          description: User email
        email_verified:
          type: boolean
          description: Email verification status
        name:
          type: string
          description: User name
        nickname:
          type: string
          description: User nickname
        picture:
          type: string
          description: User avatar
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
        last_login:
          type: string
          format: date-time
          description: Last login timestamp
    PoemRequest:
      type: object
      required:
        - id
        - user_id
        - prompt
        - status
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        prompt:
          type: string
        poem:
          type: string
        status:
          type: string
          enum: [pending, completed, failed]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PoemRequestInput:
      type: object
      required:
        - prompt
      properties:
        prompt:
          type: string
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message

  responses:
    ErrorResponse:
      description: Error response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session_token

security:
  - cookieAuth: []

paths:
  /auth/login:
    get:
      summary: Logs user into the system via Auth0
      operationId: login
      security: [] # No auth required for login
      responses:
        "302":
          description: Redirect to Auth0
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /auth/callback:
    get:
      summary: Callback from Auth0
      operationId: callback
      security: [] # No auth required for callback
      responses:
        "302":
          description: Redirect to frontend
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /logout:
    get:
      summary: Logs out current logged in user session
      operationId: logout
      responses:
        "302":
          description: Redirect to login page
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user:
    get:
      summary: Get user information
      operationId: getUser
      responses:
        "200":
          description: User information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /poems:
    get:
      summary: Get user's poem requests
      operationId: getUserPoemRequests
      responses:
        "200":
          description: List of user's poem requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PoemRequest"
        default:
          $ref: "#/components/responses/ErrorResponse"
    post:
      summary: Request a new poem
      operationId: requestPoem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PoemRequestInput"
      responses:
        "200":
          description: Successful poem request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoemRequest"
        default:
          $ref: "#/components/responses/ErrorResponse"
